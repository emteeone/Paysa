
@using System.Globalization
@using UGB.Paysa.Web.Areas.App.Models.Common.Modals
@using UGB.Paysa.Web.Areas.App.Models.Operations
@model CreateOrEditOperationModalViewModel
@using Abp.Extensions
@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditOperation")) : L("CreateNewOperation")))

<div class="modal-body">
    <div id="OperationInformationsTab">
        <form name="OperationInformationsForm" role="form" novalidate class="form-validation">

            @if (Model.IsEditMode)
            {
            <input type="hidden" name="id" value="@Model.Operation.Id" />
            }

            <div class="form-group m-form__group">
                <label for="CompteNumeroCompte">@L("Compte")</label>
                <div class="input-group">
                    <input class="form-control" id="CompteNumeroCompte" name="compteNumeroCompte" value="@Model.CompteNumeroCompte" type="text" disabled>
                    <div class="input-group-append">
                        <button class="btn btn-primary blue" id="OpenCompteLookupTableButton" type="button"><i class="fa fa-search"></i> @L("Pick")</button>
                    </div>
                    <div class="input-group-prepend">
                        <button class="btn btn-danger btn-icon" type="button" id="ClearCompteNumeroCompteButton"><i class="fa fa-times"></i></button>
                    </div>
                </div>
            </div>

            @if (Model.IsEditMode)
            {
            <input class="form-control" id="Operation_CompteId" value="@Model.Operation.CompteId" type="text" name="compteId" required hidden />
            }
            else
            {
            <input class="form-control" id="Operation_CompteId" value="" type="text" name="compteId" required hidden />
            }

            <div class="form-group">
                <label for="typeProductionId">@L("TypeOperation")</label>
                @Html.DropDownList("typeProductionId", new SelectList(Model.OperationTypeOperationList,"Id","DisplayName", (Model.IsEditMode ? Model.Operation.TypeProductionId.ToString() : "")),@L("SelectATypeOperation"), new { @class = "form-control" , @required="required" })
            </div>

            @*<div class="form-group">
                <label for="Operation_DateOperation">@L("DateOperation")</label>
                <input class="form-control m-input date-picker" id="Operation_DateOperation" type="text" name="dateOperation" value="@Model.Operation.DateOperation" />
            </div>*@

            <div class="form-group">
                <label for="Operation_Montant">@L("Montant")</label>
                <input class="form-control m-input" id="Operation_Montant" value="@Model.Operation.Montant.ToString(CultureInfo.InvariantCulture)" type="number" name="montant" />
            </div>

            <div class="form-group">
                <label for="Operation_CodeOperation">@L("CodeOperation")</label>
                <input class="form-control" id="Operation_CodeOperation" value="@Model.Operation.CodeOperation" type="text" name="codeOperation" required disabled />
            </div>

            <div class="form-group">
                <label for="Operation_Discriminator">@L("Discriminator")</label>
                <input class="form-control" id="Operation_Discriminator" value="@Model.Operation.Discriminator" type="text" name="discriminator" required />
            </div>

        </form>
    </div>
</div>

@await Html.PartialAsync("~/Areas/App/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")